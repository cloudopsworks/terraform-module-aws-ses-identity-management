name: Terraform Module AWS SES Identity Management
#logo: logo/logo.jpg

license: "APACHE2"

copyrights:
  - name: "Cloud Ops Works LLC"
    url: "https://cloudops.works"
    year: "2024"

github_repo: cloudopsworks/terraform-module-aws-ses-identity-management

description: |-
  This Terraform module manages AWS SES (Simple Email Service) identities, including domain and email identities. 
  It supports DKIM (DomainKeys Identified Mail) signing and Route 53 DNS records for domain verification and DKIM setup. 
  The module is designed to be flexible and configurable, allowing users to define SES identities and their 
  configurations through input variables.

# Introduction to the project
introduction: |-
  The AWS SES Identity Management Terraform module provides a comprehensive solution for managing 
  Simple Email Service (SES) identities in AWS. It supports both domain and email identities, 
  with built-in capabilities for DKIM signing and automated Route 53 DNS record management.

  Key features:
  - Domain and email identity management
  - DKIM signing configuration
  - Route 53 DNS record automation
  - Configuration set integration
  - Flexible identity verification options

# How to use this project
usage: |-
  To use this module, you need to configure the following input variables:

  ### Required Variables:
  - `org`: Organization configuration object containing:
    - `organization_name`: Name of your organization
    - `organization_unit`: Organization unit name
    - `environment_name`: Environment name
    - `environment_type`: Environment type (e.g., prod, dev)

  - `identities`: Map of SES identities to manage. Each identity can be either a domain or email:
    ```hcl
    identities = {
      "example-domain" = {
        domain = "example.com"
        verify = true
        dkim   = true
      }
      "example-email" = {
        email = "user@example.com"
      }
    }
    ```

  ### Optional Variables:
  - `extra_tags`: Additional tags to apply to resources
  - `spoke_def`: Spoke definition for naming convention

  ### Identity Configuration Options:
  Domain identity options:
  - `domain`: Domain name
  - `verify`: Enable Route 53 verification (default: false)
  - `dkim`: Enable DKIM signing (default: true)
  - `dkim_private_key`: Custom DKIM private key
  - `dkim_selector`: Custom DKIM selector
  - `dkim_easy`: Use Amazon Easy DKIM (default: true)
  - `dkim_easy_key_length`: Key length for Easy DKIM
  - `configuration_set`: Associated configuration set name

  Email identity options:
  - `email`: Email address
  - `configuration_set`: Associated configuration set name

# Example usage
examples: |-
  ### Basic Terragrunt Configuration
  ```hcl
  include "root" {
    path = find_in_parent_folders()
  }

  terraform {
    source = "git::https://github.com/cloudopsworks/terraform-module-aws-ses-identity-management.git?ref=v1.0.0"
  }

  inputs = {
    org = {
      organization_name  = "MyCompany"
      organization_unit = "technology"
      environment_name  = "production"
      environment_type  = "prod"
    }

    identities = {
      "main-domain" = {
        domain = "company.com"
        verify = true
        dkim   = true
      }
      "support-email" = {
        email = "support@company.com"
      }
    }
  }
  ```

  ### Advanced Configuration with Custom DKIM
  ```hcl
  inputs = {
    org = {
      organization_name  = "MyCompany"
      organization_unit = "technology"
      environment_name  = "production"
      environment_type  = "prod"
    }

    identities = {
      "custom-domain" = {
        domain            = "custom.company.com"
        verify            = true
        dkim             = true
        dkim_easy        = false
        dkim_private_key = "YOUR_PRIVATE_KEY"
        dkim_selector    = "custom"
      }
    }

    extra_tags = {
      Project     = "Email System"
      Department = "IT"
    }
  }
  ```

# How to get started quickly
quickstart: |-
  1. Add the module to your Terragrunt configuration:
     ```hcl
     terraform {
       source = "git::https://github.com/cloudopsworks/terraform-module-aws-ses-identity-management.git?ref=v1.0.0"
     }
     ```

  2. Configure basic organization settings:
     ```hcl
     inputs = {
       org = {
         organization_name  = "MyCompany"
         organization_unit = "technology"
         environment_name  = "development"
         environment_type  = "dev"
       }
     }
     ```

  3. Add your first domain identity:
     ```hcl
     inputs = {
       identities = {
         "main-domain" = {
           domain = "example.com"
           verify = true
         }
       }
     }
     ```

  4. Run Terragrunt:
     ```bash
     terragrunt init
     terragrunt plan
     terragrunt apply
     ```

  5. Verify your domain's DNS records in Route 53

include:
  - "docs/targets.md"
  - "docs/terraform.md"

contributors:
  - name: "Cristian Beraha"
    github: "berahac"